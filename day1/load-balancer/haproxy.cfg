#
# Original version Ryan Hay - https://github.com/ryanhay/ocp4-metal-install
#
# Updates
# Nov 2024 - alter api & ingress backend health checks
#
# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    mode                    http
    option                  httplog
    option                  dontlognull
    option http-server-close
    option redispatch
    option forwardfor       except 127.0.0.0/8
    retries                 3
    maxconn                 20000
    timeout http-request    10000ms
    timeout http-keep-alive 10000ms
    timeout check           10000ms
    timeout connect         40000ms
    timeout client          300000ms
    timeout server          300000ms
    timeout queue           50000ms

# Enable HAProxy stats
listen stats
    bind :9000
    stats uri /stats
    stats refresh 10000ms

# Kube API Server
frontend k8s_api_frontend
    bind :6443
    mode tcp
    default_backend k8s_api_backend

backend k8s_api_backend
    mode tcp
    option  httpchk GET /readyz HTTP/1.0
    option  log-health-checks
    balance roundrobin
#    server      bootstrap bootstrap.ocp4.example.com:6443 verify none check check-ssl inter 10s fall 2 rise 3 backup
    server      control1 control1.ocp4.example.com:6443 weight 1 verify none check check-ssl inter 10s fall 2 rise 3
    server      control2 control2.ocp4.example.com:6443 weight 1 verify none check check-ssl inter 10s fall 2 rise 3
    server      control3 control3.ocp4.example.com:6443 weight 1 verify none check check-ssl inter 10s fall 2 rise 3

# OCP Machine Config Server
frontend ocp_machine_config_server_frontend
    bind :22623
    mode tcp
    default_backend ocp_machine_config_server_backend

backend ocp_machine_config_server_backend
    mode tcp
    balance source
#    server      bootstrap bootstrap.ocp4.example.com:22623 check inter 1s backup
    server      control1 control1.ocp4.example.com:22623 check inter 1s
    server      control2 control2.ocp4.example.com:22623 check inter 1s
    server      control3 control3.ocp4.example.com:22623 check inter 1s

# OCP Ingress - layer 4 tcp mode for each. Ingress Controller will handle layer 7.
frontend ocp_http_ingress_frontend
    bind :80
    mode tcp
    default_backend ocp_http_ingress_backend

backend ocp_http_ingress_backend
    mode tcp
    balance source
    option httpchk GET /healthz/ready 
    server      worker01 worker01.ocp4.example.com:80 check port 1936 inter 1s
    server      worker02 worker02.ocp4.example.com:80 check port 1936 inter 1s
    server      worker03 worker03.ocp4.example.com:80 check port 1936 inter 1s

frontend ocp_https_ingress_frontend
    bind *:443
    mode tcp
    default_backend ocp_https_ingress_backend

backend ocp_https_ingress_backend
    mode tcp
    balance source
    option httpchk GET /healthz/ready 
    server      worker01 worker01.ocp4.example.com:443 check port 1936 inter 1s
    server      worker02 worker02.ocp4.example.com:443 check port 1936 inter 1s
    server      worker03 worker03.ocp4.example.com:443 check port 1936 inter 1s
